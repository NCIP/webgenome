<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "spring-beans.dtd">

<beans>

	<!-- ======================================================= -->
	<!--   Import configurable values from 'webgenome.properties'   -->
	<!-- ======================================================= -->
	
	<bean
		id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
            <!-- PROPERTY LOADING FROM INTERNAL PROPERTIES FILE
                 Uncomment to use the internal properties file
                 and comment out the external properties declaration immediately below.
			<bean class="org.springframework.core.io.ClassPathResource">
				<constructor-arg type="java.lang.String">
					<value>webgenome.properties</value>
				</constructor-arg>
			</bean>
            -->
            <!-- PROPERTY LOADING FROM EXTERNALIZED PROPERTIES FILE -->
            <bean class="org.rti.webgenome.framework.spring.SysPropsFileSystemResource">
                <constructor-arg type="java.lang.String">
                <value>webGenome.configFile</value>
                </constructor-arg>
            </bean>
		</property>
	</bean>

	<!-- =========================================== -->
	<!--      Data access beans                      -->
	<!-- =========================================== -->
	
<!-- Data source -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"><value>oracle.jdbc.driver.OracleDriver</value></property>
		<property name="url"><value>${db.url}</value></property>
		<property name="username"><value>${db.user.name}</value></property>
		<property name="password"><value>${db.password}</value></property>
	</bean>
	
<!-- Session factory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
    	<property name="dataSource" ref="dataSource"/>
    	<property name="mappingDirectoryLocations">
	      	<list>
        		<bean class="org.springframework.core.io.ClassPathResource">
        			<constructor-arg type="java.lang.String"><value>org/rti/webgenome/service/dao/hibernate</value></constructor-arg>
        		</bean>
        		<bean class="org.springframework.core.io.ClassPathResource">
        			<constructor-arg type="java.lang.String"><value>org/rti/webgenome/service/job</value></constructor-arg>
        		</bean>
	      	</list>
    	</property>    	
    	<property name="hibernateProperties">
      		<props>
        		<prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect</prop>
      		</props>
    	</property>
  	</bean>
  	
<!-- Principal DAO -->
  	<bean id="principalDao" class="org.rti.webgenome.service.dao.hibernate.HibernatePrincipalDao">
  		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
  	</bean>
  	
<!-- Array DAO -->
  	<bean id="arrayDao" class="org.rti.webgenome.service.dao.hibernate.HibernateArrayDao">
  		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
  	</bean>
  	
<!-- Experiment DAO -->
  	<bean id="experimentDao"
  		class="org.rti.webgenome.service.dao.hibernate.HibernateExperimentDao">
  		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
  		<property name="dataSource" ref="dataSource"/>
  	</bean>
  	
<!-- Plot DAO -->
  	<bean id="plotDao"
  		class="org.rti.webgenome.service.dao.hibernate.HibernatePlotDao">
  		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
  		<property name="dataSource" ref="dataSource"/>
  	</bean>
  	
<!-- Shopping cart DAO -->
  	<bean id="shoppingCartDao"
  		class="org.rti.webgenome.service.dao.hibernate.HibernateShoppingCartDao">
  		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
  	</bean>
    
<!-- Processing Job DAO (Standalone Mode) -->
    <bean id="jobDao"
        class="org.rti.webgenome.service.job.HibernateJobDao">
        <property name="sessionFactory"><ref bean="sessionFactory"/></property>
    </bean>
    
<!-- Organism DAO -->
    <bean id="organismDao"
    	class="org.rti.webgenome.service.dao.hibernate.HibernateOrganismDao">
  		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
  	</bean>

<!-- Cytological map DAO -->
	<bean id="cytologicalMapDao"
		class="org.rti.webgenome.service.dao.hibernate.HibernateCytologicalMapDao">
  		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
  	</bean>
  	
<!-- Annotated genome feature DAO -->
  	<bean id="annotatedGenomeFeatureDao"
		class="org.rti.webgenome.service.dao.hibernate.HibernateAnnotatedGenomeFeatureDao">
  		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
  		<property name="dataSource"><ref bean="dataSource"/></property>
  	</bean>
  	
  	<!-- =================================== -->
  	<!--      Service beans                  -->
  	<!-- =================================== -->

<!-- Security manager -->
	<bean id="securityMgr" class="org.rti.webgenome.service.session.SecurityMgrImpl">
		<property name="principalDao"><ref bean="principalDao"/></property>
	</bean>
		
<!-- ID generator for bioassays -->
	<bean id="bioAssayIdGenerator"
		class="org.rti.webgenome.service.util.IdGenerator">
		<constructor-arg index="0" value="bioassay"/>
		<constructor-arg index="1" value="id"/>
		<constructor-arg index="2"><ref bean="dataSource"/></constructor-arg>
	</bean>
		
<!-- ID generator for experiments -->
	<bean id="experimentIdGenerator"
		class="org.rti.webgenome.service.util.IdGenerator">
		<constructor-arg index="0" value="experiment"/>
		<constructor-arg index="1" value="id"/>
		<constructor-arg index="2"><ref bean="dataSource"/></constructor-arg>
	</bean>
	
<!-- ID generator for experiments -->
	<bean id="plotIdGenerator"
		class="org.rti.webgenome.service.util.IdGenerator">
		<constructor-arg index="0" value="plot"/>
		<constructor-arg index="1" value="id"/>
		<constructor-arg index="2"><ref bean="dataSource"/></constructor-arg>
	</bean>
		
<!-- Image file manager -->
	<bean id="imageFileManager"
		class="org.rti.webgenome.service.io.ImageFileManager">
		<property name="shoppingCartDao">
			<ref bean="shoppingCartDao"/>
		</property>
	</bean>
	
<!-- Data file manager -->
	<bean id="dataFileManager"
		class="org.rti.webgenome.service.io.DataFileManager">
		<constructor-arg>
			<value>${data.dir}</value>
		</constructor-arg>
	</bean>
		
<!-- Plot generator -->
	<bean id="plotGenerator"
		class="org.rti.webgenome.service.plot.PngPlotGenerator">
		<property name="imageFileManager">
			<ref bean="imageFileManager"/>
		</property>
		<property name="cytologicalMapDao">
			<ref bean="cytologicalMapDao"/>
		</property>
		<property name="annotatedGenomeFeatureDao">
			<ref bean="annotatedGenomeFeatureDao"/>
		</property>
	</bean>
	
<!-- IO Service -->
	<bean id="ioService"
		class="org.rti.webgenome.service.io.IOService">
		<constructor-arg>
			<value>${file.uploading.working.dir}</value>
		</constructor-arg>
		<constructor-arg>
			<ref bean="dataFileManager"/>
		</constructor-arg>
		<property name="bioAssayIdGenerator">
			<ref bean="bioAssayIdGenerator"/>
		</property>
		<property name="experimentIdGenerator">
			<ref bean="experimentIdGenerator"/>
		</property>
	</bean>
	
<!-- Analysis service -->
	<bean id="analysisService" class="org.rti.webgenome.service.analysis.AnalysisService">
		<property name="bioAssayIdGenerator">
			<ref bean="bioAssayIdGenerator"/>
		</property>
		<property name="experimentIdGenerator">
			<ref bean="experimentIdGenerator"/>
		</property>
	</bean>
	
<!-- Plot service -->
	<bean id="plotService" class="org.rti.webgenome.service.plot.PlotService">
		<property name="plotIdGenerator">
			<ref bean="bioAssayIdGenerator"/>
		</property>
		<property name="plotGenerator">
			<ref bean="plotGenerator"/>
		</property>
	</bean>
	
<!-- Job manager -->
	<bean id="jobManager" class="org.rti.webgenome.service.job.SerialQueueJobManager">
		<property name="analysisService">
			<ref bean="analysisService"/>
		</property>
		<property name="ioService">
			<ref bean="ioService"/>
		</property>
		<property name="plotService">
			<ref bean="plotService"/>
		</property>
		<property name="shoppingCartDao">
			<ref bean="shoppingCartDao"/>
		</property>
		<property name="arrayDao">
			<ref bean="arrayDao"/>
		</property>
		<constructor-arg>
			<ref bean="jobDao"/>
		</constructor-arg>
	</bean>
	
	<!-- ========================================== -->
	<!--        Action beans                        -->
	<!-- ========================================== -->
	
<!-- Validate login -->
	<bean name="/user/validateLogin"
		class="org.rti.webgenome.webui.struts.user.LoginAction">
		<property name="securityMgr"><ref bean="securityMgr"/></property>
		<property name="shoppingCartDao">
			<ref bean="shoppingCartDao"/>
		</property>
		<property name="imageFileManager">
			<ref bean="imageFileManager"/>
		</property>
	</bean>
	
<!-- Logout -->
	<bean name="/user/logout"
		class="org.rti.webgenome.webui.struts.user.LogoutAction">
		<property name="shoppingCartDao">
			<ref bean="shoppingCartDao"/>
		</property>
	</bean>
	
<!-- Create new account -->
	<bean name="/user/createAccount"
		class="org.rti.webgenome.webui.struts.user.CreateAccountAction">
		<property name="securityMgr"><ref bean="securityMgr"/></property>
		<property name="shoppingCartDao">
			<ref bean="shoppingCartDao"/>
		</property>
	</bean>

<!-- Show shopping cart -->
	<bean name="/cart/showCart"
		class="org.rti.webgenome.webui.struts.cart.ShowCartSetupAction">
		<property name="shoppingCartDao">
			<ref bean="shoppingCartDao"/>
		</property>
	</bean>
	
<!-- Show jobs -->
	<bean name="/cart/showJobs"
		class="org.rti.webgenome.webui.struts.cart.ShowJobsSetupAction">
		<property name="jobManager">
			<ref bean="jobManager"/>
		</property>
	</bean>
	
<!-- Purge jobs -->
	<bean name="/cart/purgeJobs"
		class="org.rti.webgenome.webui.struts.cart.PurgeJobsAction">
		<property name="jobManager">
			<ref bean="jobManager"/>
		</property>
	</bean>
		
<!-- Route to operation page -->
	<bean name="/cart/routeToOperationPage"
		class="org.rti.webgenome.webui.struts.cart.RouteToOperationPageAction">
		<property name="shoppingCartDao">
			<ref bean="shoppingCartDao"/>
		</property>
	</bean>
		
<!-- Get quantitation types -->
	<bean name="/cart/selectImportDataType"
		class="org.rti.webgenome.webui.struts.cart.GetQuantitationTypesAction">
		<property name="shoppingCartDao">
			<ref bean="shoppingCartDao"/>
		</property>
	</bean>
		
<!-- Import data from client -->
	<bean name="/cart/import"
		class="org.rti.webgenome.webui.struts.cart.ImportAction">
		<property name="organismDao">
			<ref bean="organismDao"/>
		</property>
		<property name="experimentIdGenerator">
			<ref bean="experimentIdGenerator"/>
		</property>
		<property name="bioAssayIdGenerator">
			<ref bean="bioAssayIdGenerator"/>
		</property>
		<property name="shoppingCartDao">
			<ref bean="shoppingCartDao"/>
		</property>
	</bean>
		
<!-- Route to specific plot parameters page -->
	<bean name="/cart/plotParameters"
		class="org.rti.webgenome.webui.struts.cart.PlotParametersSetupAction">
		<property name="annotatedGenomeFeatureDao">
			<ref bean="annotatedGenomeFeatureDao"/>
		</property>
		<property name="shoppingCartDao">
			<ref bean="shoppingCartDao"/>
		</property>
	</bean>
		
<!-- Select analytic operation -->
	<bean name="/cart/selectAnalysis"
		class="org.rti.webgenome.webui.struts.cart.SelectAnalysisSetupAction">
		<property name="shoppingCartDao">
			<ref bean="shoppingCartDao"/>
		</property>
	</bean>
		
<!-- Set analytic operation parameters -->
	<bean name="/cart/analysisParams"
		class="org.rti.webgenome.webui.struts.cart.AnalysisParamsSetupAction">
		<property name="shoppingCartDao">
			<ref bean="shoppingCartDao"/>
		</property>
	</bean>
		
<!-- Set up for re-running an analytic operation -->
	<bean name="/cart/rerunAnalysisParams"
		class="org.rti.webgenome.webui.struts.cart.ReRunAnalyticOperationSetupAction">
		<property name="shoppingCartDao">
			<ref bean="shoppingCartDao"/>
		</property>
	</bean>
		
<!-- Set up for re-plotting using different analytic operation parameters -->
	<bean name="/cart/adjustPlotAnalysisParamsSetup"
		class="org.rti.webgenome.webui.struts.cart.AdjustPlotAnalysisParamsSetupAction">
		<property name="shoppingCartDao">
			<ref bean="shoppingCartDao"/>
		</property>
	</bean>
		
<!-- Perform analytic operation -->
	<bean name="/cart/analysis"
		class="org.rti.webgenome.webui.struts.cart.AnalysisAction">
		<property name="analysisService">
			<ref bean="analysisService"/>
		</property>
		<property name="shoppingCartDao">
			<ref bean="shoppingCartDao"/>
		</property>
		<property name="dataFileManager">
			<ref bean="dataFileManager"/>
		</property>
		<property name="jobManager">
			<ref bean="jobManager"/>
		</property>
	</bean>
	
<!-- Rerun analytic operation -->
	<bean name="/cart/rerunAnalysis"
		class="org.rti.webgenome.webui.struts.cart.ReRunAnalysisAction">
		<property name="analysisService">
			<ref bean="analysisService"/>
		</property>
		<property name="shoppingCartDao">
			<ref bean="shoppingCartDao"/>
		</property>
		<property name="dataFileManager">
			<ref bean="dataFileManager"/>
		</property>
		<property name="jobManager">
			<ref bean="jobManager"/>
		</property>
	</bean>

<!-- Rerun analytic operation on all derived experiments in plot -->
	<bean name="/cart/adjustPlotAnalysisParams"
		class="org.rti.webgenome.webui.struts.cart.ReRunAnalysisOnPlotExperimentsAction">
		<property name="analysisService">
			<ref bean="analysisService"/>
		</property>
		<property name="shoppingCartDao">
			<ref bean="shoppingCartDao"/>
		</property>
		<property name="dataFileManager">
			<ref bean="dataFileManager"/>
		</property>
		<property name="jobManager">
			<ref bean="jobManager"/>
		</property>
	</bean>
		
<!-- Remove experiment from cart -->
	<bean name="/cart/removeExperiment"
		class="org.rti.webgenome.webui.struts.cart.RemoveExperimentAction">
		<property name="shoppingCartDao">
			<ref bean="shoppingCartDao"/>
		</property>
		<property name="arrayDao">
			<ref bean="arrayDao"/>
		</property>
		<property name="experimentDao">
			<ref bean="experimentDao"/>
		</property>
		<property name="ioService">
			<ref bean="ioService"/>
		</property>
	</bean>
		
<!-- Remove plot from cart -->
	<bean name="/cart/removePlot"
		class="org.rti.webgenome.webui.struts.cart.RemovePlotAction">
		<property name="imageFileManager">
			<ref bean="imageFileManager"/>
		</property>
		<property name="shoppingCartDao">
			<ref bean="shoppingCartDao"/>
		</property>
		<property name="plotDao">
			<ref bean="plotDao"/>
		</property>
	</bean>
	
	<bean name="/cart/uploadForm"
		class="org.rti.webgenome.webui.struts.cart.FileUploadSetupAction">
		<property name="organismDao">
			<ref bean="organismDao"/>
		</property>
		<property name="shoppingCartDao">
			<ref bean="shoppingCartDao"/>
		</property>
	</bean>

<!-- Perform file upload operation -->
	<bean name="/cart/upload"
		class="org.rti.webgenome.webui.struts.cart.FileUploadAction">
		<property name="ioService">
			<ref bean="ioService"/>
		</property>
		<property name="organismDao">
			<ref bean="organismDao"/>
		</property>
		<property name="shoppingCartDao">
			<ref bean="shoppingCartDao"/>
		</property>
		<property name="jobManager">
			<ref bean="jobManager"/>
		</property>
	</bean>
	
<!-- Color chooser -->
	<bean name="/cart/colorChooser"
		class="org.rti.webgenome.webui.struts.cart.ColorChooserSetupAction">
		<property name="shoppingCartDao">
			<ref bean="shoppingCartDao"/>
		</property>
	</bean>
		
<!-- Change bioassay color -->
	<bean name="/cart/changeBioAssayColor"
		class="org.rti.webgenome.webui.struts.cart.ChangeBioAssayColorAction">
		<property name="shoppingCartDao">
			<ref bean="shoppingCartDao"/>
		</property>
	</bean>
		
<!-- Change name of experiment, bioassay, or plot -->
	<bean name="/cart/nameChange"
		class="org.rti.webgenome.webui.struts.cart.NameChangeAction">
		<property name="shoppingCartDao">
			<ref bean="shoppingCartDao"/>
		</property>
	</bean>
		
<!-- Client plot: entry point for application client -->
	<bean name="/client/plot"
		class="org.rti.webgenome.webui.struts.client.ClientPlotAction">
		<property name="imageFileManager">
			<ref bean="imageFileManager"/>
		</property>
		<property name="bioAssayIdGenerator">
			<ref bean="bioAssayIdGenerator"/>
		</property>
		<property name="experimentIdGenerator">
			<ref bean="experimentIdGenerator"/>
		</property>
		<property name="organismDao">
			<ref bean="organismDao"/>
		</property>
		<property name="shoppingCartDao">
			<ref bean="shoppingCartDao"/>
		</property>
	</bean>
    
<!-- Client plot: test Plot action -->
    <bean name="/client/testPlot"
        class="org.rti.webgenome.webui.struts.client.ClientPlotAction">
        <property name="imageFileManager">
            <ref bean="imageFileManager"/>
        </property>
        <property name="bioAssayIdGenerator">
            <ref bean="bioAssayIdGenerator"/>
        </property>
        <property name="experimentIdGenerator">
            <ref bean="experimentIdGenerator"/>
        </property>
        <property name="organismDao">
            <ref bean="organismDao"/>
        </property>
        <property name="shoppingCartDao">
			<ref bean="shoppingCartDao"/>
		</property>
    </bean>
	
<!-- New plot -->
	<bean name="/cart/newPlot"
		class="org.rti.webgenome.webui.struts.cart.NewPlotAction">
		<property name="plotService">
			<ref bean="plotService"/>
		</property>
		<property name="shoppingCartDao">
			<ref bean="shoppingCartDao"/>
		</property>
		<property name="dataFileManager">
			<ref bean="dataFileManager"/>
		</property>
		<property name="jobManager">
			<ref bean="jobManager"/>
		</property>
	</bean>

<!-- Show plot -->
	<bean name="/cart/showPlot"
		class="org.rti.webgenome.webui.struts.cart.ShowPlotSetupAction">
		<property name="shoppingCartDao">
			<ref bean="shoppingCartDao"/>
		</property>
	</bean>
		
<!-- View/change plot parameters -->
	<bean name="/cart/changeParameters"
		class="org.rti.webgenome.webui.struts.cart.SetPlotParametersAction">
		<property name="shoppingCartDao">
			<ref bean="shoppingCartDao"/>
		</property>
	</bean>
		
<!-- Load cytobands form -->
	<bean name="/admin/loadCytobandsForm"
		class="org.rti.webgenome.webui.struts.admin.LoadCytobandsFormSetupAction">
		<property name="organismDao">
			<ref bean="organismDao"/>
		</property>
		<property name="cytologicalMapDao">
			<ref bean="cytologicalMapDao"/>
		</property>
	</bean>
		
<!-- Load cytobands -->
	<bean name="/admin/loadCytobands"
		class="org.rti.webgenome.webui.struts.admin.LoadCytobandsAction">
		<property name="organismDao">
			<ref bean="organismDao"/>
		</property>
		<property name="cytologicalMapDao">
			<ref bean="cytologicalMapDao"/>
		</property>
	</bean>
	
<!-- Delete cytobands -->
	<bean name="/admin/deleteCytobands"
		class="org.rti.webgenome.webui.struts.admin.DeleteCytobandsAction">
		<property name="organismDao">
			<ref bean="organismDao"/>
		</property>
		<property name="cytologicalMapDao">
			<ref bean="cytologicalMapDao"/>
		</property>
	</bean>
	
<!-- Load genes form -->
	<bean name="/admin/loadGenesForm"
		class="org.rti.webgenome.webui.struts.admin.LoadGenesFormSetupAction">
		<property name="organismDao">
			<ref bean="organismDao"/>
		</property>
		<property name="annotatedGenomeFeatureDao">
			<ref bean="annotatedGenomeFeatureDao"/>
		</property>
	</bean>
	
<!-- Load cytobands -->
	<bean name="/admin/loadGenes"
		class="org.rti.webgenome.webui.struts.admin.LoadGenesAction">
		<property name="organismDao">
			<ref bean="organismDao"/>
		</property>
		<property name="annotatedGenomeFeatureDao">
			<ref bean="annotatedGenomeFeatureDao"/>
		</property>
	</bean>
	
<!-- Delete genes -->
	<bean name="/admin/deleteGenes"
		class="org.rti.webgenome.webui.struts.admin.DeleteGenesAction">
		<property name="annotatedGenomeFeatureDao">
			<ref bean="annotatedGenomeFeatureDao"/>
		</property>
		<property name="organismDao">
			<ref bean="organismDao"/>
		</property>
	</bean>
	
<!-- AJAX action to retrieve newly completed jobs -->
	<bean name="/ajax/newlyCompletedJobs"
		class="org.rti.webgenome.webui.struts.ajax.NewlyCompletedJobsAction">
		<property name="jobManager" ref="jobManager"/>
	</bean>
</beans>