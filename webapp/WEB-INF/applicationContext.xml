<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "spring-beans.dtd">

<beans>

	<!-- ======================================================= -->
	<!--   Import configurable values from 'webgenome.properties'   -->
	<!-- ======================================================= -->
	
	<bean
		id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
            <!-- PROPERTY LOADING FROM INTERNAL PROPERTIES FILE
                 Uncomment to use the internal properties file
                 and comment out the external properties declaration immediately below.
			<bean class="org.springframework.core.io.ClassPathResource">
				<constructor-arg type="java.lang.String">
					<value>webgenome.properties</value>
				</constructor-arg>
			</bean>
            -->
            <!-- PROPERTY LOADING FROM EXTERNALIZED PROPERTIES FILE -->
            <bean class="org.rti.webgenome.framework.spring.SysPropsFileSystemResource">
                <constructor-arg type="java.lang.String">
                <value>webGenome.configFile</value>
                </constructor-arg>
            </bean>
		</property>
	</bean>

	<!-- =========================================== -->
	<!--      Data access beans                      -->
	<!-- =========================================== -->
	
<!-- Data source -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"><value>oracle.jdbc.driver.OracleDriver</value></property>
		<property name="url"><value>${db.url}</value></property>
		<property name="username"><value>${db.user.name}</value></property>
		<property name="password"><value>${db.password}</value></property>
	</bean>
	
<!-- Session factory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
    	<property name="dataSource" ref="dataSource"/>
    	
    	<!-- Commented out because it does not work in JBoss 4.0.5
    		 for some reason -->
    	<!--
    	<property name="mappingDirectoryLocations">
	      	<list>
        		<bean id="core.dao"
					class="org.springframework.core.io.ClassPathResource">
					<constructor-arg type="java.lang.String"
						value="org/rti/webgenome/service/dao/hibernate"/>
				</bean>
				<bean id="job.dao"
					class="org.springframework.core.io.ClassPathResource">
					<constructor-arg value="org/rti/webgenome/service/job"/>
				</bean>
	      	</list>
    	</property>
    	-->
    	
    	<!-- Individual *.hbm.xml files specified in lieu of
    	     directory locations in above commented code due to
    	     glitch in JBoss 4.0.5.  If above code is uncommented,
    	     below property should be commented out.
    	-->
    	<property name="mappingResources">
	      <list>
	      	<value>org/rti/webgenome/service/dao/hibernate/AnnotatedGenomeFeature.hbm.xml</value>
	      	<value>org/rti/webgenome/service/dao/hibernate/Array.hbm.xml</value>
	      	<value>org/rti/webgenome/service/dao/hibernate/BioAssay.hbm.xml</value>
	      	<value>org/rti/webgenome/service/dao/hibernate/BioAssayDataConstraintsWrapper.hbm.xml</value>
	      	<value>org/rti/webgenome/service/dao/hibernate/ClickBoxes.hbm.xml</value>
	      	<value>org/rti/webgenome/service/dao/hibernate/ColorChooser.hbm.xml</value>
	      	<value>org/rti/webgenome/service/dao/hibernate/Cytoband.hbm.xml</value>
	      	<value>org/rti/webgenome/service/dao/hibernate/CytologicalMap.hbm.xml</value>
	      	<value>org/rti/webgenome/service/dao/hibernate/DataColumnMetaData.hbm.xml</value>
	      	<value>org/rti/webgenome/service/dao/hibernate/DataFileMetaData.hbm.xml</value>
	      	<value>org/rti/webgenome/service/dao/hibernate/DataSourceProperties.hbm.xml</value>
	      	<value>org/rti/webgenome/service/dao/hibernate/Experiment.hbm.xml</value>
	      	<value>org/rti/webgenome/service/dao/hibernate/GenomeInterval.hbm.xml</value>
	      	<value>org/rti/webgenome/service/dao/hibernate/MouseOverStripe.hbm.xml</value>
	      	<value>org/rti/webgenome/service/dao/hibernate/MouseOverStripes.hbm.xml</value>
	      	<value>org/rti/webgenome/service/dao/hibernate/Organism.hbm.xml</value>
	        <value>org/rti/webgenome/service/dao/hibernate/Plot.hbm.xml</value>
	        <value>org/rti/webgenome/service/dao/hibernate/PlotParameters.hbm.xml</value>
	        <value>org/rti/webgenome/service/dao/hibernate/Principal.hbm.xml</value>
	        <value>org/rti/webgenome/service/dao/hibernate/ShoppingCart.hbm.xml</value>
	        <value>org/rti/webgenome/service/dao/hibernate/UserConfigurableProperty.hbm.xml</value>
	        <value>org/rti/webgenome/service/job/Job.hbm.xml</value>
	      </list>
	    </property>
	    
    	<property name="hibernateProperties">
      		<props>
        		<prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect</prop>
      		</props>
    	</property>
  	</bean>
  	
<!-- Principal DAO -->
  	<bean id="principalDao" class="org.rti.webgenome.service.dao.hibernate.HibernatePrincipalDao">
  		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
  	</bean>
  	
<!-- Array DAO -->
  	<bean id="arrayDao" class="org.rti.webgenome.service.dao.hibernate.HibernateArrayDao">
  		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
  	</bean>
  	
<!-- Experiment DAO -->
  	<bean id="experimentDao"
  		class="org.rti.webgenome.service.dao.hibernate.HibernateExperimentDao">
  		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
  		<property name="dataSource" ref="dataSource"/>
  	</bean>
  	
<!-- Plot DAO -->
  	<bean id="plotDao"
  		class="org.rti.webgenome.service.dao.hibernate.HibernatePlotDao">
  		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
  		<property name="dataSource" ref="dataSource"/>
  	</bean>
  	
<!-- Shopping cart DAO -->
  	<bean id="shoppingCartDao"
  		class="org.rti.webgenome.service.dao.hibernate.HibernateShoppingCartDao">
  		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
  		<property name="dataSource" ref="dataSource"/>
  		<property name="dataFileManager" ref="dataFileManager"/>
  	</bean>
    
<!-- Processing Job DAO (Standalone Mode) -->
    <bean id="jobDao"
        class="org.rti.webgenome.service.job.HibernateJobDao">
        <property name="sessionFactory"><ref bean="sessionFactory"/></property>
    </bean>
    
<!-- Organism DAO -->
    <bean id="organismDao"
    	class="org.rti.webgenome.service.dao.hibernate.HibernateOrganismDao">
  		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
  	</bean>

<!-- Cytological map DAO -->
	<bean id="cytologicalMapDao"
		class="org.rti.webgenome.service.dao.hibernate.HibernateCytologicalMapDao">
  		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
  	</bean>
  	
<!-- Annotated genome feature DAO -->
  	<bean id="annotatedGenomeFeatureDao"
		class="org.rti.webgenome.service.dao.hibernate.HibernateAnnotatedGenomeFeatureDao">
  		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
  		<property name="dataSource"><ref bean="dataSource"/></property>
  	</bean>
  	
  	<!-- =================================== -->
  	<!--      Service beans                  -->
  	<!-- =================================== -->
  	
<!-- IO Service -->
	<bean id="ioService"
		class="org.rti.webgenome.service.io.IOService">
		<constructor-arg>
			<value>${file.uploading.working.dir}</value>
		</constructor-arg>
		<constructor-arg>
			<ref bean="dataFileManager"/>
		</constructor-arg>
		<property name="bioAssayIdGenerator">
			<ref bean="bioAssayIdGenerator"/>
		</property>
		<property name="experimentIdGenerator">
			<ref bean="experimentIdGenerator"/>
		</property>
	</bean>
	
<!-- Transaction manager -->
  	<bean id="txManager"
  		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
  		<property name="sessionFactory" ref="sessionFactory"/>
  	</bean>
	
<!-- Facade for performing operations on webgenome db -->
  	<bean id="dbServiceTarget"
  		class="org.rti.webgenome.service.session.DaoWebGenomeDbService">
  		<property name="arrayDao" ref="arrayDao"/>
  		<property name="shoppingCartDao" ref="shoppingCartDao"/>
  		<property name="experimentDao" ref="experimentDao"/>
  		<property name="organismDao" ref="organismDao"/>
  		<property name="plotDao" ref="plotDao"/>
  		<property name="principalDao" ref="principalDao"/>
  		<property name="jobDao" ref="jobDao"/>
  		<property name="ioService" ref="ioService"/>
  	</bean>
  	
<!-- Transaction proxy for performing operations on webgenome db -->
	<bean id="dbService"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="target" ref="dbServiceTarget"/>
		<property name="transactionManager" ref="txManager"/>
		<property name="transactionAttributes">
			<props>
				<prop key="get*">PROPAGATION_SUPPORTS, readOnly</prop>
				<prop key="load*">PROPAGATION_SUPPORTS, readOnly</prop>
				<prop key="*">PROPAGATION_REQUIRED, ISOLATION_SERIALIZABLE, -java.lang.Exception</prop>
			</props>
		</property>
	</bean>

<!-- Security manager -->
	<bean id="securityMgr" class="org.rti.webgenome.service.session.SecurityMgrImpl">
		<property name="dbService" ref="dbService"/>
	</bean>
	
<!-- Special authenticator for a test account -->
<!-- TODO: The properties associated with 'wgtest,' 'wgpass,' and 'test-domain'
below should probably be configurable somehow. -->
	<bean id="testAuthenticator" class="org.rti.webgenome.service.session.InMemoryAuthenticator">
		<constructor-arg>
			<map>
				<entry>
					<key><value>wgtest</value></key>
					<value>wgpass</value>
				</entry>
			</map>
		</constructor-arg>
		<constructor-arg>
			<value>test-domain</value>
		</constructor-arg>
	</bean>
	
<!-- Authenticator for login credentials -->
	<bean id="authenticator"
		class="org.rti.webgenome.service.session.MultiCredentialProviderAuthenticator">
		<constructor-arg>
			<set>
				<ref bean="testAuthenticator"/>
				<ref bean="securityMgr"/>
				<bean class="org.rti.webgenome.service.session.RembrandtAuthenticator">
					<constructor-arg type="java.lang.String">
						<value>webgenome</value>
					</constructor-arg>
				</bean>
			</set>
		</constructor-arg>
	</bean>
		
<!-- ID generator for bioassays -->
	<bean id="bioAssayIdGenerator"
		class="org.rti.webgenome.service.util.IdGenerator">
		<constructor-arg index="0" value="bioassay"/>
		<constructor-arg index="1" value="id"/>
		<constructor-arg index="2"><ref bean="dataSource"/></constructor-arg>
	</bean>
		
<!-- ID generator for experiments -->
	<bean id="experimentIdGenerator"
		class="org.rti.webgenome.service.util.IdGenerator">
		<constructor-arg index="0" value="experiment"/>
		<constructor-arg index="1" value="id"/>
		<constructor-arg index="2"><ref bean="dataSource"/></constructor-arg>
	</bean>
	
<!-- ID generator for experiments -->
	<bean id="plotIdGenerator"
		class="org.rti.webgenome.service.util.IdGenerator">
		<constructor-arg index="0" value="plot"/>
		<constructor-arg index="1" value="id"/>
		<constructor-arg index="2"><ref bean="dataSource"/></constructor-arg>
	</bean>
		
<!-- Image file manager -->
	<bean id="imageFileManager"
		class="org.rti.webgenome.service.io.ImageFileManager">
		<property name="dbService" ref="dbService"/>
	</bean>
	
<!-- Data file manager -->
	<bean id="dataFileManager"
		class="org.rti.webgenome.service.io.DataFileManager">
		<constructor-arg>
			<value>${data.dir}</value>
		</constructor-arg>
	</bean>
		
<!-- Plot generator -->
	<bean id="plotGenerator"
		class="org.rti.webgenome.service.plot.PngPlotGenerator">
		<property name="imageFileManager">
			<ref bean="imageFileManager"/>
		</property>
		<property name="cytologicalMapDao">
			<ref bean="cytologicalMapDao"/>
		</property>
		<property name="annotatedGenomeFeatureDao">
			<ref bean="annotatedGenomeFeatureDao"/>
		</property>
	</bean>
	
<!-- Analysis service -->
	<bean id="analysisService" class="org.rti.webgenome.service.analysis.AnalysisService">
		<property name="bioAssayIdGenerator">
			<ref bean="bioAssayIdGenerator"/>
		</property>
		<property name="experimentIdGenerator">
			<ref bean="experimentIdGenerator"/>
		</property>
	</bean>
	
<!-- Plot service -->
	<bean id="plotService" class="org.rti.webgenome.service.plot.PlotService">
		<property name="plotIdGenerator">
			<ref bean="bioAssayIdGenerator"/>
		</property>
		<property name="plotGenerator">
			<ref bean="plotGenerator"/>
		</property>
	</bean>
	
<!-- Job manager -->
	<bean id="jobManager" class="org.rti.webgenome.service.job.SerialQueueJobManager">
		<property name="analysisService">
			<ref bean="analysisService"/>
		</property>
		<property name="ioService">
			<ref bean="ioService"/>
		</property>
		<property name="plotService">
			<ref bean="plotService"/>
		</property>
		<property name="webGenomeDbService">
			<ref bean="dbService"/>
		</property>
		<constructor-arg>
			<ref bean="dbService"/>
		</constructor-arg>
	</bean>

<!-- Data sources index -->
	<bean id="dataSourcesIndex"
		class="java.util.HashMap">
		<constructor-arg>
			<map>
				<entry>
					<key><value>mock.data.source</value></key>
					<bean class="org.rti.webgenome.service.data.MockDataSource"/>
				</entry>
			</map>
		</constructor-arg>
	</bean>
	
	<!-- ========================================== -->
	<!--        Action beans                        -->
	<!-- ========================================== -->
	
<!-- Base action -->
	<bean name="baseAction" class="org.rti.webgenome.webui.struts.BaseAction"
		abstract="true">
		<property name="dbService" ref="dbService"/>
		<property name="cytologicalMapDao" ref="cytologicalMapDao"/>
		<property name="annotatedGenomeFeatureDao" ref="annotatedGenomeFeatureDao"/>
		<property name="jobManager" ref="jobManager"/>
		<property name="analysisService" ref="analysisService"/>
		<property name="dataFileManager" ref="dataFileManager"/>
		<property name="ioService" ref="ioService"/>
		<property name="experimentIdGenerator" ref="experimentIdGenerator"/>
		<property name="bioAssayIdGenerator" ref="bioAssayIdGenerator"/>
		<property name="plotService" ref="plotService"/>
		<property name="imageFileManager" ref="imageFileManager"/>
		<property name="dataSourcesIndex" ref="dataSourcesIndex"/>
		<property name="securityMgr" ref="securityMgr"/>
		<property name="authenticator" ref="authenticator"/>
	</bean>
	
<!-- Validate login -->
	<bean name="/user/validateLogin"
		class="org.rti.webgenome.webui.struts.user.LoginAction"
		parent="baseAction"/>
	
<!-- Logout -->
	<bean name="/user/logout"
		class="org.rti.webgenome.webui.struts.user.LogoutAction"
		parent="baseAction"/>
	
<!-- Create new account -->
	<bean name="/user/createAccount"
		class="org.rti.webgenome.webui.struts.user.CreateAccountAction"
		parent="baseAction"/>

<!-- Show shopping cart -->
	<bean name="/cart/showCart"
		class="org.rti.webgenome.webui.struts.cart.ShowCartSetupAction"
		parent="baseAction"/>
	
<!-- Show jobs -->
	<bean name="/cart/showJobs"
		class="org.rti.webgenome.webui.struts.cart.ShowJobsSetupAction"
		parent="baseAction"/>
	
<!-- Purge jobs -->
	<bean name="/cart/purgeJobs"
		class="org.rti.webgenome.webui.struts.cart.PurgeJobsAction"
		parent="baseAction"/>
		
<!-- Route to operation page -->
	<bean name="/cart/routeToOperationPage"
		class="org.rti.webgenome.webui.struts.cart.RouteToOperationPageAction"
		parent="baseAction"/>
		
<!-- Get quantitation types -->
	<bean name="/cart/selectImportDataType"
		class="org.rti.webgenome.webui.struts.cart.GetQuantitationTypesAction"
		parent="baseAction"/>
		
<!-- Import data from client -->
	<bean name="/cart/import"
		class="org.rti.webgenome.webui.struts.cart.ImportAction"
		parent="baseAction"/>
		
<!-- Route to specific plot parameters page -->
	<bean name="/cart/plotParameters"
		class="org.rti.webgenome.webui.struts.cart.PlotParametersSetupAction"
		parent="baseAction"/>
		
<!-- Select analytic operation -->
	<bean name="/cart/selectAnalysis"
		class="org.rti.webgenome.webui.struts.cart.SelectAnalysisSetupAction"
		parent="baseAction"/>
		
<!-- Set analytic operation parameters -->
	<bean name="/cart/analysisParams"
		class="org.rti.webgenome.webui.struts.cart.AnalysisParamsSetupAction"
		parent="baseAction"/>
		
<!-- Set up for re-running an analytic operation -->
	<bean name="/cart/rerunAnalysisParams"
		class="org.rti.webgenome.webui.struts.cart.ReRunAnalyticOperationSetupAction"
		parent="baseAction"/>
		
<!-- Set up for re-plotting using different analytic operation parameters -->
	<bean name="/cart/adjustPlotAnalysisParamsSetup"
		class="org.rti.webgenome.webui.struts.cart.AdjustPlotAnalysisParamsSetupAction"
		parent="baseAction"/>
		
<!-- Perform analytic operation -->
	<bean name="/cart/analysis"
		class="org.rti.webgenome.webui.struts.cart.AnalysisAction"
		parent="baseAction"/>
	
<!-- Rerun analytic operation -->
	<bean name="/cart/rerunAnalysis"
		class="org.rti.webgenome.webui.struts.cart.ReRunAnalysisAction"
		parent="baseAction"/>

<!-- Rerun analytic operation on all derived experiments in plot -->
	<bean name="/cart/adjustPlotAnalysisParams"
		class="org.rti.webgenome.webui.struts.cart.ReRunAnalysisOnPlotExperimentsAction"
		parent="baseAction"/>
		
<!-- Remove experiment from cart -->
	<bean name="/cart/removeExperiment"
		class="org.rti.webgenome.webui.struts.cart.RemoveExperimentAction"
		parent="baseAction"/>
		
<!-- Remove plot from cart -->
	<bean name="/cart/removePlot"
		class="org.rti.webgenome.webui.struts.cart.RemovePlotAction"
		parent="baseAction"/>
	
<!-- Color chooser -->
	<bean name="/cart/colorChooser"
		class="org.rti.webgenome.webui.struts.cart.ColorChooserSetupAction"
		parent="baseAction"/>
		
<!-- Change bioassay color -->
	<bean name="/cart/changeBioAssayColor"
		class="org.rti.webgenome.webui.struts.cart.ChangeBioAssayColorAction"
		parent="baseAction"/>
		
<!-- Change name of experiment, bioassay, or plot -->
	<bean name="/cart/nameChange"
		class="org.rti.webgenome.webui.struts.cart.NameChangeAction"
		parent="baseAction"/>
		
<!-- Client plot: entry point for application client -->
	<bean name="/client/plot"
		class="org.rti.webgenome.webui.struts.client.ClientPlotAction"
		parent="baseAction"/>
    
<!-- Client plot: test Plot action -->
    <bean name="/client/testPlot"
        class="org.rti.webgenome.webui.struts.client.ClientPlotAction"
		parent="baseAction"/>
	
<!-- New plot -->
	<bean name="/cart/newPlot"
		class="org.rti.webgenome.webui.struts.cart.NewPlotAction"
		parent="baseAction"/>

<!-- Show plot -->
	<bean name="/cart/showPlot"
		class="org.rti.webgenome.webui.struts.cart.ShowPlotSetupAction"
		parent="baseAction"/>
		
<!-- View/change plot parameters -->
	<bean name="/cart/changeParameters"
		class="org.rti.webgenome.webui.struts.cart.SetPlotParametersAction"
		parent="baseAction"/>
		
<!-- Load cytobands form -->
	<bean name="/admin/loadCytobandsForm"
		class="org.rti.webgenome.webui.struts.admin.LoadCytobandsFormSetupAction"
		parent="baseAction"/>
		
<!-- Load cytobands -->
	<bean name="/admin/loadCytobands"
		class="org.rti.webgenome.webui.struts.admin.LoadCytobandsAction"
		parent="baseAction"/>
	
<!-- Delete cytobands -->
	<bean name="/admin/deleteCytobands"
		class="org.rti.webgenome.webui.struts.admin.DeleteCytobandsAction"
		parent="baseAction"/>
	
<!-- Load genes form -->
	<bean name="/admin/loadGenesForm"
		class="org.rti.webgenome.webui.struts.admin.LoadGenesFormSetupAction"
		parent="baseAction"/>
	
<!-- Load cytobands -->
	<bean name="/admin/loadGenes"
		class="org.rti.webgenome.webui.struts.admin.LoadGenesAction"
		parent="baseAction"/>
	
<!-- Delete genes -->
	<bean name="/admin/deleteGenes"
		class="org.rti.webgenome.webui.struts.admin.DeleteGenesAction"
		parent="baseAction"/>
	
<!-- Main data import page setup -->
	<bean name="/upload/mainImport"
		class="org.rti.webgenome.webui.struts.upload.MainImportPageSetupAction"
		parent="baseAction"/>
		
<!-- Initialize upload -->
	<bean name="/upload/initializeUploadForm"
		class="org.rti.webgenome.webui.struts.upload.InitializeUploadAction"
		parent="baseAction"/>
		
<!-- Show main upload form -->
	<bean name="/upload/showUploadForm"
		class="org.rti.webgenome.webui.struts.upload.ShowMainUploadFormSetupAction"
		parent="baseAction"/>
		
<!-- Upload data file -->
	<bean name="/upload/uploadDataFile"
		class="org.rti.webgenome.webui.struts.upload.UploadDataFileAction"
		parent="baseAction"/>
	
<!-- Upload data file -->
	<bean name="/upload/uploadZipFile"
		class="org.rti.webgenome.webui.struts.upload.UploadZipFileAction"
		parent="baseAction"/>
	
<!-- Setup for specifying data columns -->
	<bean name="/upload/specifyDataColumns"
		class="org.rti.webgenome.webui.struts.upload.SpecifyDataColumnsSetupAction"
		parent="baseAction"/>
		
<!-- Setup for specifying data columns -->
	<bean name="/upload/specifyZipDataColumns"
		class="org.rti.webgenome.webui.struts.upload.SpecifyZipDataColumnsSetupAction"
		parent="baseAction"/>
		
<!-- Remove data file from upload -->
	<bean name="/upload/removeDataFile"
		class="org.rti.webgenome.webui.struts.upload.RemoveDataFileAction"
		parent="baseAction"/>

<!-- Complete the process of attaching data file -->		
	<bean name="/upload/attachDataFile"
		class="org.rti.webgenome.webui.struts.upload.AttachDataFileAction"
		parent="baseAction"/>
		
<!-- Complete the process of attaching zip data file -->
	<bean name="/upload/attachZipDataFile"
		class="org.rti.webgenome.webui.struts.upload.AttachZipDataFileAction"
		parent="baseAction"/>
		
<!-- Upload reporter file -->
	<bean name="/upload/uploadReporterFile"
		class="org.rti.webgenome.webui.struts.upload.UploadDataFileAction"
		parent="baseAction"/>
	
<!-- Setup for specifying reporter columns -->
	<bean name="/upload/specifyReporterColumns"
		class="org.rti.webgenome.webui.struts.upload.SpecifyDataColumnsSetupAction"
		parent="baseAction"/>
		
<!-- Remove data file from upload -->
	<bean name="/upload/removeReporterFile"
		class="org.rti.webgenome.webui.struts.upload.RemoveReporterFileAction"
		parent="baseAction"/>

<!-- Complete the process of attaching reporter file -->		
	<bean name="/upload/attachReporterFile"
		class="org.rti.webgenome.webui.struts.upload.AttachReporterFileAction"
		parent="baseAction"/>
		
<!-- Upload data -->
	<bean name="/upload/uploadData"
		class="org.rti.webgenome.webui.struts.upload.UploadAction"
		parent="baseAction"/>
	
<!-- Initialize import session with remote data source -->
	<bean name="/upload/initRemoteSession"
		class="org.rti.webgenome.webui.struts.upload.InitRemoteSessionAction"
		parent="baseAction"/>
	
<!-- Remote system login -->
	<bean name="/upload/remoteSysLogin"
		class="org.rti.webgenome.webui.struts.upload.RemoteSysLoginAction"
		parent="baseAction"/>
		
<!-- Fetch experiment list from remote system -->
	<bean name="/upload/fetchExperimentList"
		class="org.rti.webgenome.webui.struts.upload.FetchExperimentListAction"
		parent="baseAction"/>
		
<!-- Fetch experiments from remote system -->
	<bean name="/upload/fetchExperiments"
		class="org.rti.webgenome.webui.struts.upload.FetchExperimentsAction"
		parent="baseAction"/>
	
<!-- AJAX action to retrieve jobs whose status has changed -->
	<bean name="/ajax/newlyChangedJobs"
		class="org.rti.webgenome.webui.struts.ajax.NewlyChangedJobsAction"
		parent="baseAction"/>
</beans>