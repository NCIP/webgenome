<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "spring-beans.dtd">

<beans>

	<!-- ======================================================= -->
	<!--   Import configurable values from 'webcgh.properties'   -->
	<!-- ======================================================= -->
	
	<bean
		id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<bean class="org.springframework.core.io.ClassPathResource">
				<constructor-arg type="java.lang.String">
					<value>conf/webcgh.properties</value>
				</constructor-arg>
			</bean>
		</property>
	</bean>

	<!-- =========================================== -->
	<!--      Data access beans                      -->
	<!-- =========================================== -->
	
<!-- Data source -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"><value>oracle.jdbc.driver.OracleDriver</value></property>
		<property name="url"><value>${db.url}</value></property>
		<property name="username"><value>${db.user.name}</value></property>
		<property name="password"><value>${db.password}</value></property>
	</bean>
	
<!-- Session factory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
    	<property name="dataSource" ref="dataSource"/>
    	<property name="mappingDirectoryLocations">
	      	<list>
        		<bean class="org.springframework.core.io.ClassPathResource">
        			<constructor-arg type="java.lang.String"><value>org/rti/webcgh/service/dao/hibernate</value></constructor-arg>
        		</bean>
                <!-- Standalone Mode - Hibernate Mappings Location: -->
                <bean class="org.springframework.core.io.ClassPathResource">
                    <constructor-arg type="java.lang.String"><value>org/rti/webcgh/standalone/dao/hibernate</value></constructor-arg>
                </bean>
	      	</list>
    	</property>
    	<property name="hibernateProperties">
      		<props>
        		<prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect</prop>
      		</props>
    	</property>
  	</bean>
  	
<!-- Principal DAO -->
  	<bean id="principalDao" class="org.rti.webcgh.service.dao.hibernate.HibernatePrincipalDao">
  		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
  	</bean>
  	
<!-- Shopping cart DAO -->
  	<bean id="shoppingCartDao"
  		class="org.rti.webcgh.service.dao.hibernate.HibernateShoppingCartDao">
  		<property name="sessionFactory"><ref bean="sessionFactory"/></property>
  	</bean>
    
<!-- Processing Job DAO (Standalone Mode) -->
    <bean id="processingJobDao"
        class="org.rti.webcgh.standalone.dao.hibernate.ProcessingJobDaoImpl">
        <property name="sessionFactory"><ref bean="sessionFactory"/></property>
    </bean>

  	
  	<!-- =================================== -->
  	<!--      Service beans                  -->
  	<!-- =================================== -->

<!-- Security manager -->
	<bean id="securityMgr" class="org.rti.webcgh.service.mgr.SecurityMgrImpl">
		<property name="principalDao"><ref bean="principalDao"/></property>
	</bean>
	
<!-- Client data service -->
	<bean id="clientDataService"
		class="org.rti.webcgh.service.client.TestClientDataService"/>
		
<!-- In-memory chromosome array data getter -->
	<bean id="inMemoryChromosomeArrayDataGetter"
		class="org.rti.webcgh.service.util.InMemoryChromosomeArrayDataGetter"/>
		
<!-- ID generator for plots not persisted and, hence, not given
	 IDs by the DAO tier. -->
	<bean id="plotIdGenerator"
		class="org.rti.webcgh.service.util.IdGenerator"/>
		
<!-- ID generator for experiments not persisted and, hence, not given
	 IDs by the DAO tier. -->
	<bean id="experimentIdGenerator"
		class="org.rti.webcgh.service.util.IdGenerator"/>
		
<!-- Image file manager -->
	<bean id="imageFileManager"
		class="org.rti.webcgh.io.ImageFileManager">
		<constructor-arg type="java.lang.String">
			<value>${image.dir.path}</value>
		</constructor-arg>
		<constructor-arg type="org.rti.webcgh.service.dao.ShoppingCartDao">
			<ref bean="shoppingCartDao"/>
		</constructor-arg>
	</bean>
		
<!-- Plot generator -->
	<bean id="plotGenerator"
		class="org.rti.webcgh.service.plot.PngPlotGenerator">
		<property name="imageFileManager">
			<ref bean="imageFileManager"/>
		</property>
	</bean>
	
	<!-- ========================================== -->
	<!--        Action beans                        -->
	<!-- ========================================== -->
	
<!-- Validate login -->
	<bean name="/user/validateLogin"
		class="org.rti.webcgh.webui.struts.user.LoginAction">
		<property name="securityMgr"><ref bean="securityMgr"/></property>
	</bean>
	
<!-- Logout -->
	<bean name="/user/logout"
		class="org.rti.webcgh.webui.struts.user.LogoutAction"/>
	
<!-- Create new account -->
	<bean name="/user/createAccount"
		class="org.rti.webcgh.webui.struts.user.CreateAccountAction">
		<property name="securityMgr"><ref bean="securityMgr"/></property>
	</bean>

<!-- Show shopping cart -->
	<bean name="/cart/showCart"
		class="org.rti.webcgh.webui.struts.cart.ShowCartSetupAction"/>
		
	<bean name="/cart/operation"
		class="org.rti.webcgh.webui.struts.cart.OperationAction"/>
		
<!-- Remove experiment from cart -->
	<bean name="/cart/removeExperiment"
		class="org.rti.webcgh.webui.struts.cart.RemoveExperimentAction"/>
		
<!-- Remove plot from cart -->
	<bean name="/cart/removePlot"
		class="org.rti.webcgh.webui.struts.cart.RemovePlotAction">
		<property name="imageFileManager">
			<ref bean="imageFileManager"/>
		</property>
	</bean>
		
<!-- Client plot: entry point for application client -->
	<bean name="/client/plot"
		class="org.rti.webcgh.webui.struts.client.ClientPlotAction">
		<property name="clientDataService">
			<ref bean="clientDataService"/>
		</property>
		<property name="experimentIdGenerator">
			<ref bean="experimentIdGenerator"/>
		</property>
		<property name="imageFileManager">
			<ref bean="imageFileManager"/>
		</property>
	</bean>
	
<!-- New plot -->
	<bean name="/cart/newPlot"
		class="org.rti.webcgh.webui.struts.cart.NewPlotAction">
		<property name="plotGenerator">
			<ref bean="plotGenerator"/>
		</property>
		<property name="plotIdGenerator">
			<ref bean="plotIdGenerator"/>
		</property>
		<property name="chromosomeArrayDataGetter">
			<ref bean="inMemoryChromosomeArrayDataGetter"/>
		</property>
	</bean>
				
	<bean name="/cart/showPlot"
		class="org.rti.webcgh.webui.struts.cart.ShowPlotSetupAction"/>
</beans>