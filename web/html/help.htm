<html>
<link type="text/css" rel="stylesheet" href="webcgh-help.css">
<body>
<h1 align="center" class="docTitle">webGenome Help</h1>
<h2 class="heading1">Table of Contents</h2>
<a href="#overview">1 - webGenome Overview</a>
<br>
<a href="#plots">2 - Plots</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#plotSetup">2.1 - Setting up for Plotting</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#plotSelectCgh">2.1.1 - Selecting Experiments</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#selectDataWizard">2.1.1.1 - Data Selection Wizard</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#plotParams">2.1.2 - Plotting Parameters</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#param-genomeIntervals">2.1.2.1 - Genome Segment</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#param-quantitationType">2.1.2.2 - Quantitation Type</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#param-analyticPipeline">2.1.2.3 - Analytic Pipeline</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#plotDimensions">2.1.2.4 - Plot Dimensions</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#plotProperties">2.1.2.5 - Plot Properties</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#plotTypes">2.2 - Plot Types</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#scatterPlot">2.2.1 - Scatter Plot</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#annotationPlot">2.2.2 - Annotation Plot</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#annotationReport">2.2.3 - Annotation Report</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ideogramPlot">2.2.4 - Ideogram Plot</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#probePlot">2.2.5 - Probe Plot</a>
<br>
<a href="#virtual">3 - Virtual Experiments</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#managingVirtual">3.1 - Managing Virtual Experiments</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#newVirtual">3.2 - Creating New Virtual Experiments</a>
<br>
<a href="#pipelines">4 - Analytic Pipelines</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#pipelines-manage">4.1 - Managing Analytic Pipelines</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#pipelines-new">4.2 - Creating/Editing Analytic Pipelines</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#filtering">4.2.1 - Data Filtering Operations</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#normalization">4.2.2 - Data Normalization Operations</a>
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#aggregateStatistics">4.2.3 - Aggregate Statistical Functions</a>
<br>
<p>
<br>
</p>
<p>
<br>
</p>
<a name="overview"></a><span class="heading1">1 - webGenome Overview</span>
<br>
<p>
		
<p>
			WebGenome is a web-based application for
			plotting and visualizing microarray data including both
			comparative
			genome hybridization (CGH) data and gene expression.
			The system allows the user
			to select microarray data sets from public as well as private
			database areas.  The user may perform preliminary filtering,
			smoothing, and normalization of data prior to plotting.  The
			system supports several types of plots:
		</p>
		
		
<ul>
<a name=""></a>
<li>
<a href="#scatterPlot">Scatter Plots</a> -
					
				Plots DNA copy number measurements
				across the genome, chromosome, or chromosomal interval.
			</li>
<a name=""></a>
<li>
<a href="#annotationPlot">Annotation Plots</a> -
					
				Shows DNA copy number measurements
				in relation to annotated genome feature, such as genes.
			</li>
<a name=""></a>
<li>
<a href="#annotationReport">Annotation Reports</a> -
					
				Shows annotation
				genome features in a tabular format.
			</li>
<a name=""></a>
<li>
<a href="#ideogramPlot">Ideogram Plot</a> -
					
				Shows chromosomal amplifications
				and deletions in relation to cytogenetic chromosome ideograms.
			</li>
<a name=""></a>
<li>
<a href="#probePlot">Probe Plot</a> -
					
				Shows measured copy number for
				selected reporter probes.
			</li>
</ul>
		
		
<p>
			In addition, webGenome enables the user to 
			create <a href="#virtual">virtual experiments</a> 
			(i.e. user-defined aggregations of data) and custom 
			<a href="#pipelines">analytic pipelines</a>, both of which are persistent.
			The underlying data model used by webGenome is a very simplied version of
			the MAGE-OM.  The most important concept for the use of the system
			is that individual array data sets, called <em>bioassays</em> are aggregated
			into experiments.
		</p>
	
</p>
<a name="plots"></a><span class="heading1">2 - Plots</span>
<br>
<p>
		
		
		
		
		
		
		

	
</p>
<a name="plotSetup"></a><span class="heading2">2.1 - Setting up for Plotting</span>
<br>
<p>
		The user must do two things before creating a plot.  First, one or more
		experiments must be selected.  Second, plotting parameters must be set appropriately.
		Experiment selection is covered in the section <a href="#plotSelectCgh">Selecting Experiments</a>.
		Plotting parameters are covered in the section <a href="#plotParameters">Plotting Parameters</a>.
		
			
			
			
			
			
		</p>
<a name="plotSelectCgh"></a><span class="heading3">2.1.1 - Selecting Experiments</span>
<br>
<p>
				For a general description of the tasks that must be
				performed prior to plotting see
				the section <a href="#plotSetup">Setting up for Plotting</a>.
				The selected experiments screen, which is displayed when the
				user selects <em>Plot Data</em> and <em>Data</em> from the menu,
				displays the contents of the users "data shopping cart."  All
				data in this cart will be plotted when the user selects a plot.
				The first time the user navigates to this screen after log-in
				the data shopping cart will be empty.  To add items into the cart, the
				system provides a wizard interface described in the section
				<a href="#selectDataWizard">Data Selection Wizard</a>.  This wizard
				will be invoked when the user clicks the button "Select Experiments."
				If there are experiments in the cart, the selected experiments screen will
				enable the user to remove experiments.
				
				
			</p>
<a name="selectDataWizard"></a><span class="heading4">2.1.1.1 - Data Selection Wizard</span>
<br>
<p>
					The data selection wizard can be invokved by selecting
					the <em>Plot Data</em> and <em>Data</em> menus and then clicking
					on the button "Select Experiments."  The data wizard enables
					the user to select experiments from among the configured data sources.
					The wizard will allow the user to specify certain required experiment
					properties that are required for generating plots.  The individual
					screens of the wizard are described here.
					
					<ul>
<a name="wizardSelectExperiments"></a>
<li>
<span class="propName">Selecting Experiments</span> -
					
							For an overview of the data selection wizard
							see <a href="#selectDataWizard">Data Selection Wizard</a>.
							In this screen the user is presented with a list of all
							experiments that he or she is authorized to access minus experiments
							already in the cart.  This includes
							any defined virtual experiments
							(see section <a href="#virtual">Virtual Experiments</a>).
						</li>
<a name="wizardSelectExperimentTypes"></a>
<li>
<span class="propName">Selecting Experiment Types</span> -
					
							In this screen the user selects the type of experiment (i.e. CGH or
							gene expression) for each
							experiment selected in the previous screen.  The user may select
							experiment types at the level of the individual bioassay (i.e. array)
							or for the entire experiment.  If the user selects multiple experiment types
							for bioassays within the same experiment, then the system splits the
							experiment by experiment type.  The result is that all bioassays in each
							experiment are homogeneous with regard to type.  The reason for this is that
							many analytical operations are performed on experiments.  Mixing experiment
							types would lead to statistically nonsensical results.
						</li>
<a name="wizardSelectProbeSets"></a>
<li>
<span class="propName">Selecing Probe Sets</span> -
					
							WebGenome needs to know what probe set each bioassay is associated with
							in order to look up the physical position of probes witin the genome.
							If the user does not find the appropriate probe from the drop-down lists,
							then he or she should select one of the "other" options.  The system can
							still generate plots if the user submitted probe locations with
							their data.  If the user selects probe sets from different organisms
							within the same experiment, the system will split the experiment
							by organism for the reason discussed in the previous step.
						</li>
<a name="wizardSelectAssemblies"></a>
<li>
<span class="propName">Selecting Genome Assemblies</span> -
					
							WebGenome maps probe locations to genome assembly versions.  In this
							screen the user must specify an assembly version for each organism.
							If the user selects the checkbox "Use probe locations submitted with array data where possible"
							the system will use user-provided probe location data if these data were submitted with
							experiment results.  Regardless, if any given probe does not have an associated location the
							system will attempt to look the information up.
						</li>
<a name="wizardResults"></a>
<li>
<span class="propName">View Probe Mapping Results</span> -
					
							In this screen the system displays the numbers and percentages of probes
							that the system was able to map to a physical position on a genome assembly
							using either user-provided locations or locations stored within the system.
						</li>
</ul>
				
</p>
<a name="plotParams"></a><span class="heading3">2.1.2 - Plotting Parameters</span>
<br>
<p>
				Plotting parameters control how data will be presented graphically
				in the plots.  All plotting parameters are set in one form and apply
				to all plots.  In other words, parameters are global. Additionally,
				many of the plots are interactive.  Interacting with a plot may cause
				certain plotting plotting parameters to be set.  For instance, in scatter
				plots of the whole genome, chromosome numbers are hot-linked; clicking on a
				chromosome name navigates the user to a plot of the selected chromosome.
				This has the side-effect of setting the <a href="#param-chromosome">chromosome
				parameter</a>.  Global plotting parameters are desirable
				in that the user can easily switch between different
				graphical views of the same underlying data easily.  The table on this
				page indicates which parameters are required, optional, and ignored for
				each plot type.
				
				
				
				
				
				
		
				
				

				
				
		
				
				
			</p>
<a name="param-genomeIntervals"></a><span class="heading4">2.1.2.1 - Genome Segment</span>
<br>
<p>
					This set of parameters constrains the genome interval that will
					be displayed in plots.  Genome segments should be specified in the
					following format: CHROMOSOME[:FROM-TO][,CHROMOSOME[:FROM-TO]]*
					
					<p>
<b>Examples</b>
</p>
					
					
<p>
						3:40000-50000<br>
						3,5:140000-160000<br>
						1,2<br>
						1:5000-7000,2:30000-100000
					</p>
				
</p>
<a name="param-quantitationType"></a><span class="heading4">2.1.2.2 - Quantitation Type</span>
<br>
<p>
					Quantitation type.  Examples include "copy number," "LOH,"
					"fold change," "log2 fold change."
				</p>
<a name="param-analyticPipeline"></a><span class="heading4">2.1.2.3 - Analytic Pipeline</span>
<br>
<p>
					These parameters specify the analytic pipeline that will be performed
					on data before it is plotted.
					<ul>
<a name="param-pipeline"></a>
<li>
<span class="propName">pipeline</span> -
					
							Name of analytic pipeline that will be run on data prior to
							plotting.  For instructions on how to create a new
							pipeline or change settings for individual pipeline operations see
							the <a href="#pipelines">Analytic Pipelines</a> section.
						</li>
</ul>
				
</p>
<a name="plotDimensions"></a><span class="heading4">2.1.2.4 - Plot Dimensions</span>
<br>
<p>
					These parameters specify the extent of the plot.
					<ul>
<a name="param-width"></a>
<li>
<span class="propName">width</span> -
					Width of plot on pixels.</li>
<a name="param-height"></a>
<li>
<span class="propName">height</span> -
					Height of plot in pixels.</li>
</ul>
				
</p>
<a name="plotProperties"></a><span class="heading4">2.1.2.5 - Plot Properties</span>
<br>
<p>
					These parameters control which features are displayed in plots.
					<ul>
<a name="param-minY"></a>
<li>
<span class="propName">Minimum plot value</span> -
					
							This parameters has two effects:  In scatter plots it corresponds the
							minimum value on the Y-axis.  In annotation and ideogram plots is
							corresponds to the minimum saturation value for color coded
							copy number measurement.  For instance, all copy number measurements that
							are equal to or less than this value will be colored green.
						</li>
<a name="param-maxY"></a>
<li>
<span class="propName">Maximum plot value</span> -
					
							This parameters has two effects:  In scatter plots it corresponds the
							maximum value on the Y-axis.  In annotation and ideogram plots is
							corresponds to the maximum saturation value for color coded
							copy number measurement.  For instance, all copy number measurements that
							are equal to or greater than this value will be colored red.
						</li>
<a name="param-threshold"></a>
<li>
<span class="propName">Data mask</span> -
					
							This is used in annotation and ideogram plots to filter out
							color-coded copy number data between two threshold values
							(e.g. -0.2 and 0.3).  This enables the user to filter out
							background values so that only regions of significant
							amplification or deletion (or expression) are colored.
						</li>
<a name="param-showLabels"></a>
<li>
<span class="propName">Show annotated feature labels in plot</span> -
					
							This parameters controls if the names annotated genome features
							are displayed in annotation plots.
						</li>
<a name="param-showIdeograms"></a>
<li>
<span class="propName">Show ideogram in plot</span> -
					
							This parameter controls if chromosome ideograms are displayed in
							scatter plots.
						</li>
<a name="param-ideogramsPerRow"></a>
<li>
<span class="propName">Chromosome ideograms per row</span> -
					
							This specifies the number of chromosome ideograms per row in
							ideogram plots.  It is only relevant when the plot consists
							of the entire genome.
						</li>
<a name="param-ideogramSize"></a>
<li>
<span class="propName">Chromosome ideogram size</span> -
					
							This controls the relative size of chromosome ideograms in ideogram
							plots.
						</li>
<a name="param-selectedFeatureTypes"></a>
<li>
<span class="propName">Annotated genomic feature types</span> -
					
							This control allows the user to select which types of annotated genome
							features will be displayed in the annotation plot and annotation report.
						</li>
<a name="param-referenceAssembly"></a>
<li>
<span class="propName">Reference assembly</span> -
					
							This paramter is used in annotation plots and reports to specify the
							assembly from which annotation features are obtained.  In ideogram plots
							and scatter plots when the <a href="#param-showIdeograms">show ideograms in plot</a>
							option is selected, this specifies which assembly to obtain ideograms from.
						</li>
<a name="param-probes"></a>
<li>
<span class="propName">Specific probes</span> -
					
							This is used in probe plots to specify specific probes that
							will be viewed.
						</li>
</ul>
				
</p>
<a name="plotTypes"></a><span class="heading2">2.2 - Plot Types</span>
<br>
<p>
		
			
			
			
			
			
			
			
			
			
			
			
			
			
			
		
		
</p>
<a name="scatterPlot"></a><span class="heading3">2.2.1 - Scatter Plot</span>
<br>
<p>
				Scatter plots display array reporter values (e.g. fold changes) against physical genome location.
				Users can view data at arbitrary resolutions from the entire genome on down.
				Both CGH and gene expression data can be co-visualized in this plot.  When moving
				the mouse over specific probes the system provides mouse-over probe names.
				Clicking on the name of an experiment or bioassay in the plot legend will
				highlight the corresponding data.
			</p>
<a name="annotationPlot"></a><span class="heading3">2.2.2 - Annotation Plot</span>
<br>
<p>
				This plot displays annotated genome features along with color-coded data intensities
				in a genome browser view.
			</p>
<a name="annotationReport"></a><span class="heading3">2.2.3 - Annotation Report</span>
<br>
<p>
			 	This plot gives a tabular view of annotated genome features within a given region.
			 	Users can download tables in Excel format.
			</p>
<a name="ideogramPlot"></a><span class="heading3">2.2.4 - Ideogram Plot</span>
<br>
<p>
				This plot shows color-coded data values in relation to chromosome ideograms.
			</p>
<a name="probePlot"></a><span class="heading3">2.2.5 - Probe Plot</span>
<br>
<p>
				This plot shows data values for selected probes only.
			</p>
<a name="virtual"></a><span class="heading1">3 - Virtual Experiments</span>
<br>
<p>
		The system allows the user to aggregate individual bioassays from
		one or more experiments to create user-defined data sets called
		<em>virtual experiments</em>.  These groupings are stored persistently
		and are only accessible from the user login account from which they were created.
	
		
		
		
		
		
			
	</p>
<a name="managingVirtual"></a><span class="heading2">3.1 - Managing Virtual Experiments</span>
<br>
<p>
			
<p>
				For overall information on virtual experiments see
				<a href="#virtual">Virtual Experiments</a>
			
</p>
			
<p>
				The virtual experiment management
				feature allows the user to delete existing virtual experiments
				and view the properties of virtual experiments.  When the user
				clicks on a <em>delete</em> link the system will prompt the user
				before actually deleting the experiment to ensure that experiments
				are not inadvertently deleted.
			</p>
			
			
<p>
				To access this feature click on the <em>Virtual Experiments</em> tab
				and click the <em>Manage Experiments</em> link if this page is not
				already displayed.
			</p>
		
</p>
<a name="newVirtual"></a><span class="heading2">3.2 - Creating New Virtual Experiments</span>
<br>
<p>
			To create a new virtual experiment click on the <em>Virtual Experiment</em>
			tab and <em>New Experiment</em> sub-tab.  The system will then guide
			the user through a wizard-like process with the following steps:
			
			<ul>
<a name="virtualSelectExperiments"></a>
<li>
<span class="propName">Selecting Experiments</span> -
					
					For an overview of the virtual experiment wizard process
					see <a href="#newVirtual">Creating New Virtual Experiments</a>.
					The user must first select one or more experiments from which bioassays
					will be drawn for the new virtual experiment.  All experiments that
					the user is authorized to access are presented in this screen excluding
					the virtual experiments.
				</li>
<a name="virtualSelectBioAssays"></a>
<li>
<span class="propName">Selecting Bioassays</span> -
					
					In this screen all bioassays from experiments selected in the previous
					screen are displayed.  The bioassays selected in this screen will
					constitute the set of bioassays in the virtual experiment.
				</li>
<a name="virtualAnnotation"></a>
<li>
<span class="propName">Annotating Virtual Experiment</span> -
					
					In this screen the user must provide some basic annotation that will
					be associated with the new virtual experiment, including an experiment
					name and a description.
				</li>
<a name="virtualSummary"></a>
<li>
<span class="propName">Committing Virtual Experiment</span> -
					
					In this screen the user reviews information entered and commits
					the virtual experiment to persistent storage.
				</li>
</ul>
		
</p>
<a name="pipelines"></a><span class="heading1">4 - Analytic Pipelines</span>
<br>
<p>
		When a user creates a plot webGGH may first
		invoke an <em>analytic pipeline</em> on data.  An analytic pipeline
		is a sequence of analytical operations that may filter, normalize, or
		compute aggregate statistics on data.  The system comes pre-loaded
		with default pipelines.  Additionally the user may create custom
		analytic pipelines which are persisted and available each time
		they log into the system.  Users
		specify which pipeline is invoked through the <a href="#plotParams">
		plot parameters</a> screen.  Here we describe how custom analytic pipelines
		are managed and created.
		
		
		
		
		
		
	</p>
<a name="pipelines-manage"></a><span class="heading2">4.1 - Managing Analytic Pipelines</span>
<br>
<p>
			
<p>
				For basic information on analytic pipelines see the section
				on <a href="#pipelines">Analytic Pipelines</a>
			
</p>
			
<p>
				This screen allows the user to manage their analytic pipelines.
				The user can delete or edit existing pipelines with the exception
				of pre-configured pipelines.  The system will prompt the user if the
				a delete link is clicked to ensure that pipelines will not
				be inadventantly deleted.
			</p>
		
</p>
<a name="pipelines-new"></a><span class="heading2">4.2 - Creating/Editing Analytic Pipelines</span>
<br>
<p>
			
<p>
				For basic information on analytic pipelines see the section
				on <a href="#pipelines">Analytic Pipelines</a>
			
</p>
			
<p>
				This screen allows the user to create a new pipeline or edit an
				existing pipeline.  The user can select a name for the pipeline
				and create sequences of analytic operations.  Analytic operations
				are of three basic types: 1) data filtering, 2) data normalization,
				and 3) aggregate statistical functions.  Available operations are
				described in the following subsections.
			</p>
			
			
			
			
			
			
			
		
</p>
<a name="filtering"></a><span class="heading3">4.2.1 - Data Filtering Operations</span>
<br>
<p>
				
<ul>
<a name="filterWithinRange"></a>
<li>
<span class="propName">Filter within range</span> -
					
						The user species a <em>lower boundary</em> and an
						<em>upper boundary</em> for a range of values.  The
						system filters out all probe values within the specified
						range.  The user may specify any real number for the
						boundaries including -INFINITY and INFINITY.  For plotting
						CGH data it is recommended
						that this filter only be used for removing outliers.  The
						intensities (e.g. fold change, copy number, etc.) will be
						interpolated for regions where probes have been filtered out.
						To mask insignificant regions of copy number change from ideogram and
						annotation plots, set the <a href="#param-threshold">Data Mask</a>
						parameter.
					</li>
</ul>
			
</p>
<a name="normalization"></a><span class="heading3">4.2.2 - Data Normalization Operations</span>
<br>
<p>
				
<ul>
<a name="simpleArrayNormalization"></a>
<li>
<span class="propName">Simple array-based normalization</span> -
					
						This procedure subtracts the array specific mean or median from each observation. 
						The user specifies the use of the mean or median as the normalization factor. 
						The choice of median based normalization allows the user to lessen the effect of outliers. 
						This type of normalization is useful for making spot intensities comparable across arrays 
						as it removes an overall array effect; each array will be "centered" on zero (or something 
						close to it if the median is used). 
					</li>
<a name="simpleExperimentNormalization"></a>
<li>
<span class="propName">Simple experiment-based normalization</span> -
					
						This procedure subtracts the array specific mean or median from each observation then 
						adds the experiment level mean or median back to each observation. The user specifies 
						the use of the mean or median as the normalization factor. The choice of median based 
						normalization allows the user to lessen the effect of outliers. This type of normalization 
						is useful for making spot intensities comparable across arrays while preserving any overall 
						difference due to treatment effect. This will center each array on the difference between 
						it's own array mean/median and the experiment wide mean/median. 
					</li>
<a name="simpleSmoothing"></a>
<li>
<span class="propName">Simple smoothing</span> -
					
						This operation smooths data using a "sliding window" approach.  The user
						specified a <em>Window size</em>.  The value of probe <em>i</em>
						is equal to the average value of probes <em>i - w/2</em> through 
						<em>i + w/2</em>, where <em>w</em> is the size of the window.
					</li>
<a name="linearRegression"></a>
<li>
<span class="propName">Linear regression</span> -
					
						The effect of linear regression based normalization is similar to that of the simple 
						normalization array operation. This procedure uses linear regression to subtract the 
						array specific mean from each observation, allowing the user to make spot intensities 
						comparable across arrays.  The regression model treats each array as a separate value 
						in a class variable and adjusts accordingly. Requires: at least 2 experiments with at 
						least one array each. 
					</li>
<a name="loess"></a>
<li>
<span class="propName">Local (i.e. non-linear or LOESS) regression</span> -
					
						A data smoothing technique that utilizes regression to reduce "noise", bringing individual 
						data points into line with neighboring points. Each point is placed into a local neighborhood 
						of surrounding points (based on distance) the size of which, referred to as &ldquo;percentage of data&rdquo;, 
						is specified by the researcher. For each point, a weighted regression is then performed such 
						that near points have greater influence (weights) than further points. The residual of this 
						regression is used as the normalized or smoothed value, and the process is repeated for each
						 point in the data set. Note that the larger the percentage of the data in the local neighborhood, 
						 the more intense the smoothing effect will be. For our purposes, the following weight function is 
						 used for the regression:  W(x) = (1-|d/D|^3)^3, where x = a given point in the neighborhood, 
						 d = distance to the point of interest, and D = maximum distance to the point of interest 
						 in the local neighborhood.
					</li>
</ul>
			
</p>
<a name="aggregateStatistics"></a><span class="heading3">4.2.3 - Aggregate Statistical Functions</span>
<br>
<p>
				Aggregate statistical functions aggregate data with experiments and create summary statistics
				on a probe-by-props (i.e. reporter-by-reporter) basis.
				<ul>
<a name="averageOperation"></a>
<li>
<span class="propName">Average</span> -
					
						This function computes the average and standard error of probes with experiments.
					</li>
</ul>
			
</p>
</body>
</html>
